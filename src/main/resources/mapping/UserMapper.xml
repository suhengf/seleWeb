<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auto.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.auto.entity.User">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="passWord" jdbcType="VARCHAR" property="passWord"/>
        <result column="realName" jdbcType="VARCHAR" property="realName"/>
    </resultMap>

    <select id="Sel" resultType="com.auto.entity.User">
        select * from user where id = #{id}
    </select>

    <insert id="insert" parameterType="com.auto.entity.User">
        insert into user (id,userName, passWord, realName)
        values (#{id,jdbcType=INTEGER},#{userName,jdbcType=VARCHAR},  #{passWord,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR})
    </insert>


    <select id="selectSlice" resultType="java.lang.String" parameterType="com.auto.entity.QueryParam">
        select id from
        (select id,(@rowNum :=@rowNum+1) as rowNum
        from (
            select id from user
                where  userName=#{userName}
                        order by id
                                        )tb,
                (select @rowNum :=0) r
                )as t where mod(rowNum ,#{fixNum})=1;
    </select>


    <select id="selectSliceById" resultType="com.auto.entity.User" parameterType="com.auto.entity.QueryParam">
        select id,userName, passWord, realName from
        user where userName=#{userName} and id 	&gt;= #{id} limit  #{fixNum};
    </select>


    <select id="selectAll" resultType="com.auto.entity.User" parameterType="com.auto.entity.QueryParam">
        select id,userName, passWord, realName from user order by id limit #{fixNum} , 100;
    </select>

</mapper>
